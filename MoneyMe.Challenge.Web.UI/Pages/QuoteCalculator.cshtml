@page "/loans/{id:guid}/quotecalculator"
@using MoneyMe.Challenge.Business.Enums
@model QuoteCalculatorModel
<form method="post">
    <div class="form-group">
        <label for="product">Product</label>
        <select id="product" name="LoanApplication.Product">
            <option></option>
            @foreach (var product in Enum.GetValues(typeof(Product)))
            {
                <option value="@product">@product</option>
            }
        </select>
        <span id="productDescription">please select a product</span>
    </div>
    <div class="form-group">
        <label for="amountRequired">How much do you need?</label>
        <input type="range"
               id="amountRequired"
               name="LoanApplication.AmountRequired"
               min="@Model.MinAmountRequiredValue"
               max="@Model.MaxAmountRequiredValue"
               value="@Model.LoanApplication.AmountRequired" 
               oninput="updateAmountDisplay(this)" />
        <span id="amountDisplay">@Model.LoanApplication.AmountRequired</span>
    </div>
    <div class="form-group">
        <label for="term">How many months to pay?</label>
        <input type="range"
               id="term"
               name="LoanApplication.Term"
               min="@Model.MinTermValue"
               max="@Model.MaxTermValue"
               value="@Model.LoanApplication.Term"
               oninput="updateTermDisplay(this)" />
        <span id="termDisplay">@Model.LoanApplication.Term</span>
    </div>
    <div class="form-group">
        <label for="title">Title:</label>
        <input type="text" class="form-control" id="title" name="LoanApplication.Title" value="@Model.LoanApplication.Title">
    </div>
    <div class="form-group">
        <label for="firstName">First Name:</label>
        <input type="text" class="form-control" id="firstName" name="LoanApplication.FirstName" value="@Model.LoanApplication.FirstName">
    </div>
    <div class="form-group">
        <label for="lastName">Last Name:</label>
        <input type="text" class="form-control" id="lastName" name="LoanApplication.LastName" value="@Model.LoanApplication.LastName">
    </div>
    <div class="form-group">
        <label for="dateOfBirth">Date of Birth:</label>
        <input type="date" class="form-control" id="dateOfBirth" name="LoanApplication.DateOfBirth" value="@Model.LoanApplication.DateOfBirth.ToString("yyyy-MM-dd")">
    </div>
    <div class="form-group">
        <label for="mobile">Mobile:</label>
        <input type="text" class="form-control" id="mobile" name="LoanApplication.Mobile" value="@Model.LoanApplication.Mobile">
    </div>
    <div class="form-group">
        <label for="email">Email:</label>
        <input type="email" class="form-control" id="email" name="LoanApplication.Email" value="@Model.LoanApplication.Email">
    </div>
    <button type="submit" class="btn btn-primary">Calculate quote</button>

    <input type="hidden" name="LoanApplication.Id" value="@Model.LoanApplication.Id" />
</form>

<script>
    // Function to update the display of the amount as the slider is moved
    function updateAmountDisplay(slider) {
        // Get the value of the slider
        var value = slider.value;

        // Update the span with the new value
        document.getElementById("amountDisplay").textContent = value;
    }
    // Function to update the display of the amount as the slider is moved
    function updateTermDisplay(slider) {
        // Get the value of the slider
        var value = slider.value;

        // Update the span with the new value
        document.getElementById("termDisplay").textContent = value;
    }

    document.getElementById("product").addEventListener("change", function () {
        const selectedProduct = this.value;

        // Optionally, you can log the selected value to see if it's changing correctly
        console.log("Selected Product:", selectedProduct);

        const guid = window.location.pathname.split('/')[2]; // Assuming the {guid} is the 3rd part of the URL
        const url = `/loans/${guid}/quotecalculator?handler=ProductSelected`;

        fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
            },
            body: JSON.stringify(selectedProduct) // Send the enum value as a string
        }).then(response => response.json())
          .then(data => {
              const termSlider = document.getElementById("term");
              const termSliderDisplay = document.getElementById("termDisplay");
              const newMinValue = data.min;
              if (parseFloat(termSlider.value) < newMinValue) {
                termSlider.value = newMinValue;
                termSliderDisplay.textContent = newMinValue;
              }
              termSlider.min = newMinValue;

              const productDescriptionDisplay = document.getElementById("productDescription");
              productDescriptionDisplay.textContent = data.desc;
          }).catch(error => console.error('Error:', error));
    });
</script>